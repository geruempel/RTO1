<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\Apus.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\Apus.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Oct 14 17:26:35 2020
<BR><P>
<H3>Maximum Stack Usage =        268 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; TaskWatch &rArr; Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[24]">CEC_CAN_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[7]">PVD_VDDIO2_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[a]">RCC_CRS_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from systick.o(i.SysTick_Handler) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f072.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[1a]">TIM15_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[17]">TIM6_DAC_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[18]">TIM7_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[e]">TSC_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[21]">USART1_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[22]">USART2_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[23]">USART3_4_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[25]">USB_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f072.o(.text) referenced from startup_stm32f072.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f072.o(.text)
 <LI><a href="#[29]">_snputc</a> from printf1.o(i._snputc) referenced from printf1.o(i.__0snprintf$1)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[55]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[56]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[57]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2c]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[58]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[59]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CEC_CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_VDDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tick_InitSysTick
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>ADC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[31]"></a>ADC_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f0xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[2f]"></a>Adc_Init</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, adc.o(i.Adc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Adc_Init &rArr; ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_SetChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>Adc_SetChannel</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.Adc_SetChannel))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[37]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_InitGPIOs
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
</UL>

<P><STRONG><a name="[36]"></a>GPIO_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_InitGPIOs
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
</UL>

<P><STRONG><a name="[3a]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskWatch
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPoti
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLed
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCounter
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[34]"></a>GPIO_setup</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, main.o(i.GPIO_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO_setup &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>Key_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, key.o(i.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Key_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>Led_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, led.o(i.Led_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Led_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_InitGPIOs
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
</UL>

<P><STRONG><a name="[30]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, systick.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f072.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>TaskCounter</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, taskcounter.o(i.TaskCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = TaskCounter &rArr; Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawString
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>TaskKey</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, taskkey.o(i.TaskKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = TaskKey &rArr; Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawString
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>TaskLed</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, taskled.o(i.TaskLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = TaskLed &rArr; Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawString
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>TaskPoti</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, taskpoti.o(i.TaskPoti))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = TaskPoti &rArr; Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawString
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>TaskWatch</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, taskwatch.o(i.TaskWatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = TaskWatch &rArr; Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawString
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>Tft_ClearScreen</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tftdisplay.o(i.Tft_ClearScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = Tft_ClearScreen &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WritePixels
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>Tft_DrawChar</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, tftdisplay.o(i.Tft_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WritePixel
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteCmd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawString
</UL>

<P><STRONG><a name="[3e]"></a>Tft_DrawString</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, tftdisplay.o(i.Tft_DrawString))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskWatch
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPoti
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLed
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCounter
</UL>

<P><STRONG><a name="[49]"></a>Tft_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, tftdisplay.o(i.Tft_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Tft_Init &rArr; Tft_InitGPIOs &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteData
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteCmd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_InitGPIOs
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>Tft_SetFont</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tftdisplay.o(i.Tft_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>Tick_InitSysTick</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, systick.o(i.Tick_InitSysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Tick_InitSysTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>__0snprintf$1</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, printf1.o(i.__0snprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5c]"></a>__1snprintf$1</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printf1.o(i.__0snprintf$1), UNUSED)

<P><STRONG><a name="[3d]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printf1.o(i.__0snprintf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCounter
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_assert</STRONG> (Thumb, 60 bytes, Stack size 156 bytes, main.o(i.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = __aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_SetWindow
</UL>

<P><STRONG><a name="[5d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[5f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = main &rArr; TaskWatch &rArr; Tft_DrawString &rArr; Tft_DrawChar &rArr; Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskWatch
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPoti
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLed
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCounter
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tick_InitSysTick
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_SetFont
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_ClearScreen
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4a]"></a>Tft_InitGPIOs</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, tftdisplay.o(i.Tft_InitGPIOs))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Tft_InitGPIOs &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_Init
</UL>

<P><STRONG><a name="[44]"></a>Tft_SetWindow</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, tftdisplay.o(i.Tft_SetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Tft_SetWindow &rArr; __aeabi_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteData
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawChar
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_ClearScreen
</UL>

<P><STRONG><a name="[4d]"></a>Tft_ToBSRRValue</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tftdisplay.o(i.Tft_ToBSRRValue))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WritePixels
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteData
</UL>

<P><STRONG><a name="[47]"></a>Tft_WriteCmd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tftdisplay.o(i.Tft_WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Tft_WriteCmd &rArr; Tft_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawChar
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WritePixels
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_SetWindow
</UL>

<P><STRONG><a name="[4b]"></a>Tft_WriteData</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tftdisplay.o(i.Tft_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Tft_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_ToBSRRValue
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WritePixel
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteCmd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_SetWindow
</UL>

<P><STRONG><a name="[48]"></a>Tft_WritePixel</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tftdisplay.o(i.Tft_WritePixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Tft_WritePixel &rArr; Tft_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_DrawChar
</UL>

<P><STRONG><a name="[45]"></a>Tft_WritePixels</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, tftdisplay.o(i.Tft_WritePixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Tft_WritePixels &rArr; Tft_WriteCmd &rArr; Tft_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_WriteCmd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_ToBSRRValue
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tft_ClearScreen
</UL>

<P><STRONG><a name="[50]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, systick.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tick_InitSysTick
</UL>

<P><STRONG><a name="[3b]"></a>SetSysClock</STRONG> (Thumb, 206 bytes, Stack size 12 bytes, system_stm32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[52]"></a>_printf_core</STRONG> (Thumb, 332 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf$1
</UL>

<P><STRONG><a name="[29]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printf1.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0snprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
